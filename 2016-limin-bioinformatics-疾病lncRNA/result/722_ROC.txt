
mean_tpr = 0.0
mean_fpr = np.linspace(0, 1, 100)

for i, (train, test) in enumerate(cv):
    # Compute ROC curve and area the curve
    #通过roc_curve()函数，求出fpr和tpr，以及阈值
    #print (y[test])
    #print ( pred[test])
    DN_O_Sim_fpr, DN_O_Sim_tpr, DN_O_Sim_thresholds = roc_curve(y[test], DN_O_Sim_pred[test])
    DN_Sim_fpr, DN_Sim_tpr, DN_Sim_thresholds = roc_curve(y[test], DN_Sim_pred[test])
    lncN_O_fpr, lncN_O_tpr, lncN_O_thresholds = roc_curve(y[test], lncN_O_pred[test])
    lncN_Sim_fpr, lncN_Sim_tpr, lncN_Sim_thresholds = roc_curve(y[test], lncN_Sim_pred[test])
    #print (fpr)
    #print (tpr)
    #print (thresholds)
    mean_tpr += interp(mean_fpr, fpr, tpr)			#对mean_tpr在mean_fpr处进行插值，通过scipy包调用interp()函数
    mean_tpr[0] = 0.0 								#初始处为0
    roc_auc = auc(fpr, tpr)
    #画图，只需要plt.plot(fpr,tpr),变量roc_auc只是记录auc的值，通过auc()函数能计算出来
    plt.plot(fpr, tpr, lw=1, label='ROC fold %d (area = %0.2f)' % (i, roc_auc))

#画对角线
plt.plot([0, 1], [0, 1], '--', color=(0.6, 0.6, 0.6), label='Luck')

mean_tpr /= len(cv) 					#在mean_fpr100个点，每个点处插值插值多次取平均
mean_tpr[-1] = 1.0 						#坐标最后一个点为（1,1）
mean_auc = auc(mean_fpr, mean_tpr)		#计算平均AUC值
#画平均ROC曲线
#print mean_fpr,len(mean_fpr)
#print mean_tpr
plt.plot(mean_fpr, mean_tpr, 'k--',label='Mean ROC (area = %0.2f)' % mean_auc, lw=2)

#plt.xlim([-0.05, 1.05])
#plt.ylim([-0.05, 1.05])
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('Receiver operating characteristic example')
plt.legend(loc="lower right")
plt.show()